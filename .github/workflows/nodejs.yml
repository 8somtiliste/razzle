name: Node CI

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        node-version: [8.x, 10.x, 12.x, 13.x, 14.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    name: Test on node ${{ matrix.node-version }} and ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install elm globally
      run: yarn global add elm

    - name: Restore lerna
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ matrix.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

    - name: Install and bootstrap packages
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile --ignore-engines --network-timeout 30000

    - name: Run tests
      run: yarn test --runInBand --coverage
      env:
        CI: true
        WARNINGS_ERRORS_DISABLE: true
